name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  # 1st job: Validate the Terraform code
  terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code        # checkout the code from the repository for the job to use it 
        uses: actions/checkout@v4

      - name: Set Up Terraform     # set up the terraform environment
        uses:  hashicorp/setup-terraform@v3

      - name: Create backend.config file  # this file is used to configure the remote backend for terraform
        run: |
          cd infra
          echo "bucket = \"${{ secrets.AWS_TF_STATE_BUCKET_NAME }}\"" > backend.config 
          echo "key = \"${{ secrets.AWS_TF_STATE_S3_KEY }}\"" >> backend.config
          echo "region = \"${{ secrets.AWS_REGION }}\"" >> backend.config
        # these values need to be set in the repository secrets

      - name: Terraform format check
        run: |
          cd infra
          terraform fmt -check -recursive

      - name: Terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # these values need to be set in the repository secrets
        run: |
          cd infra
          terraform init -backend-config="./backend.config"

      - name: Terraform Validate
        run: |
          cd infra
          terraform validate
        
  # 2nd job: Lint and Format the Lambda Python code
  python:
    name: Lint and Format Python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install black flake8

      - name: Run black (formatting check)
        run: black --check ./backend/lambdas

      - name: Run flake8 (linting)
        run: flake8 ./backend/lambdas --extend-ignore=E501
    